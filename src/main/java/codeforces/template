package codeforces;

import java.io.*;
import java.util.StringTokenizer;

public class Main {

	private static void s(InputReader in, PrintWriter out) {
	}

	public static void solve(InputReader in, PrintWriter out) {
		s(in, out);
	}

//	public static void solve(InputReader in, PrintWriter out) {
//		int t = in.nextInt();
//		while (--t >= 0) {
//			s(in, out);
//		}
//	}

	public static void main(String[] args) {
		PrintWriter out = new PrintWriter(System.out);
		InputReader in = new InputReader(System.in);
		solve(in, out);
		out.close();
	}

	/**************************************************************************/

	private static class InputReader {
		public BufferedReader r;
		public StringTokenizer t;

		public InputReader(InputStream s) {
			r = new BufferedReader(new InputStreamReader(s), 32768);
			t = null;
		}

		public int[] nextIntAr(int n) {
			int[] a = new int[n];
			for (int i = 0; i < n; i++) a[i] = nextInt();
			return a;
		}

		public int nextInt() {
			return Integer.parseInt(next());
		}

		public String next() {
			while (t == null || !t.hasMoreTokens()) {
				try {
					t = new StringTokenizer(r.readLine());
				} catch (IOException e) {
					throw new RuntimeException(e);
				}
			}
			return t.nextToken();
		}

		public Long[] nextLongAr(int n) {
			Long[] a = new Long[n];
			for (int i = 0; i < n; i++) a[i] = nextLong();
			return a;
		}

		public Long nextLong() {
			return Long.parseLong(next());
		}

		public Double nextDouble() {
			return Double.parseDouble(next());
		}

		public String nextLine() {
			try {
				return r.readLine();
			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}
	}
}